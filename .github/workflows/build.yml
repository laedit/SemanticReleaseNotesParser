name: Build

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build:
    runs-on: windows-latest

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
    - uses: actions/checkout@v2

    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow

    - uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          nuget-

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x

    - name: Install dependencies
      run: |
        dotnet restore src
        dotnet tool restore

    - name: Check gitversion
      run: dotnet gitversion $env:GITHUB_WORKSPACE /output buildserver

    - name: Echo version
      run: echo $env:GitVersion_NuGetVersionV2

    - name: Build
      run: dotnet build src --configuration Release --no-restore /p:Version=$env:GitVersion_NuGetVersionV2

    - name: Test
      run: |
        dotnet test src --configuration Release --no-build --nologo --verbosity normal --collect:"XPlat Code Coverage"
        dotnet reportgenerator "-reports:src/**/TestResults/**/coverage.cobertura.xml" "-targetdir:artifacts/reports" -reporttypes:Html

    - name: Publish windows version
      run: dotnet publish src/SemanticReleaseNotesParser --configuration Release --output ./publish --self-contained true --runtime win-x86 -p:PublishSingleFile=true -p:PublishTrimmed=true /p:PackAsTool=false /p:Version=$env:GitVersion_NuGetVersionV2

    - name: Publish release notes
      run: |
        ./publish/SemanticReleaseNotesParser.exe -g=categories --debug -o="artifacts/ReleaseNotes.html" --pluralizecategoriestitle --includestyle
        ./publish/SemanticReleaseNotesParser.exe -g=categories --debug -t=environment -f=markdown --pluralizecategoriestitle # for github release?

    - name: Create packages
      run: |
        Copy-Item -Path "src/SemanticReleaseNotesParser/bin/Release/SemanticReleaseNotesParser.$version.nupkg" -Destination artifacts
        Copy-Item -Path "src/SemanticReleaseNotesParser.Core/bin/Release/SemanticReleaseNotesParser.Core.$version.nupkg" -Destination artifacts
        Copy-Item -Path "src/SemanticReleaseNotesParser.Core/bin/Release/SemanticReleaseNotesParser.Core.$version.snupkg" -Destination artifacts
        Copy-Item -Path "artifacts/ReleaseNotes.html" -Destination publish
        Compress-Archive -Path publish/* -DestinationPath "artifacts/SemanticReleaseNotesParser.$version.zip"
        $installPath = "chocolatey/tools/chocolateyInstall.ps1"
        $originalContent = Get-Content $installPath
        $originalContent.replace('[version]', $version) | Set-Content $installPath
        choco pack chocolatey/semanticreleasenotes-parser.nuspec --version $version --outdir artifacts
        Set-Content $installPath $originalContent

    - uses: actions/upload-artifact@v2
      with:
        path: artifacts/
